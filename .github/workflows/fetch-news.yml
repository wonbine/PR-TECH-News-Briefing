name: Fetch News via OpenAI

on:
  workflow_dispatch:
  schedule:
    # 매일 08:00 KST 실행 (UTC 기준 23:00 전날)
    - cron: '0 23 * * *'

permissions:
  contents: write

concurrency:
  group: fetch-news
  cancel-in-progress: true

jobs:
  fetch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          python -m pip install openai requests beautifulsoup4

      - name: Run collector
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          NAVER_CLIENT_ID: ${{ secrets.NAVER_CLIENT_ID }}
          NAVER_CLIENT_SECRET: ${{ secrets.NAVER_CLIENT_SECRET }}
          # DEMO_MODE: '1'  # 네이버 키가 없으면 주석 해제하여 데모 실행
        run: |
          python scripts/collect_news.py

      - name: Make latest.json copy
        run: |
          python - <<'PY'
          import os, datetime, shutil
          d = datetime.date.today().isoformat()
          src = os.path.join('docs','data', f'{d}.json')
          dst = os.path.join('docs','data','latest.json')
          if os.path.exists(src):
              shutil.copyfile(src, dst)
              print('copied to latest.json')
          else:
              print('today json not found; skip latest')
          PY
          
      - name: Build index.json (available dates)
        run: |
          python - <<'PY'
          import os, json
          p = 'docs/data'
          dates = []
          for fn in os.listdir(p):
            if fn.endswith('.json') and fn not in ('latest.json',):
              dates.append(fn.replace('.json',''))
          dates.sort(reverse=True)
          with open(os.path.join(p,'index.json'),'w',encoding='utf-8') as f:
            json.dump({'dates':dates}, f, ensure_ascii=False, indent=2)
          print('index.json written with', len(dates), 'dates')
          PY

      - name: Commit JSON
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add docs/data/*.json
          git commit -m "chore: update news data" || echo "no changes"
          git push
